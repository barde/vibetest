{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "14276404293108220813"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "baseName": {
      "type": "string",
      "defaultValue": "copilotblazor"
    },
    "environment": {
      "type": "string",
      "defaultValue": "prod"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Y1"
    }
  },
  "variables": {
    "uniqueSuffix": "[substring(uniqueString(resourceGroup().id), 0, 8)]",
    "functionAppName": "[format('{0}-func-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
    "storageAccountName": "[format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
    "keyVaultName": "[format('{0}-kv-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
    "staticWebAppName": "[format('{0}-swa-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}-ai', variables('functionAppName'))]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "WorkspaceResourceId": ""
      },
      "tags": {
        "environment": "production"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      },
      "tags": {
        "environment": "production"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-02-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enableRbacAuthorization": true,
        "enableSoftDelete": true,
        "enablePurgeProtection": true,
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": true,
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      },
      "tags": {
        "environment": "production"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}-plan', variables('functionAppName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "Dynamic"
      },
      "kind": "functionapp"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', variables('functionAppName')))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').primaryEndpoints.blob]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-ai', variables('functionAppName'))), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-ai', variables('functionAppName'))), '2020-02-02').ConnectionString]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~3"
            }
          ],
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2"
        },
        "httpsOnly": true
      },
      "tags": {
        "environment": "production"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('{0}-ai', variables('functionAppName')))]",
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', variables('functionAppName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/webtests",
      "apiVersion": "2022-06-15",
      "name": "[format('{0}-keepalive-test', variables('functionAppName'))]",
      "location": "[parameters('location')]",
      "kind": "ping",
      "properties": {
        "SyntheticMonitorId": "[format('{0}-keepalive-test', variables('functionAppName'))]",
        "Name": "[format('{0} Keep Alive Test', variables('functionAppName'))]",
        "Description": "Pings the keep-alive endpoint every 5 minutes to prevent cold starts",
        "Enabled": true,
        "Frequency": 300,
        "Timeout": 30,
        "Kind": "ping",
        "RetryEnabled": true,
        "Locations": [
          {
            "Id": "us-ca-sjc-azr"
          },
          {
            "Id": "us-tx-sn1-azr"
          },
          {
            "Id": "us-il-ch1-azr"
          }
        ],
        "Configuration": {
          "WebTest": "[format('<WebTest Name=\"{0} Keep Alive Test\" Id=\"ABD48585-0831-40CB-9069-682EA6BB3583\" Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"30\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\"><Items><Request Method=\"GET\" Guid=\"a5f10126-e4cd-570d-961c-cea43999a200\" Version=\"1.1\" Url=\"https://{1}.azurewebsites.net/api/keepalive\" ThinkTime=\"0\" Timeout=\"30\" ParseDependentRequests=\"False\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"200\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" /></Items></WebTest>', variables('functionAppName'), variables('functionAppName'))]"
        }
      },
      "tags": {
        "[format('hidden-link:{0}', resourceId('Microsoft.Insights/components', format('{0}-ai', variables('functionAppName'))))]": "Resource",
        "environment": "production"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('{0}-ai', variables('functionAppName')))]"
      ]
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[format('{0}-keepalive-alert', variables('functionAppName'))]",
      "location": "global",
      "properties": {
        "description": "Alert when keep-alive test fails",
        "severity": 2,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Insights/webtests', format('{0}-keepalive-test', variables('functionAppName')))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "KeepAliveFailure",
              "metricName": "availabilityResults/availabilityPercentage",
              "operator": "LessThan",
              "threshold": 80,
              "timeAggregation": "Average",
              "criterionType": "StaticThresholdCriterion"
            }
          ]
        }
      },
      "tags": {
        "environment": "production"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/webtests', format('{0}-keepalive-test', variables('functionAppName')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'add')]",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2023-01-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2023-01-01",
      "name": "[variables('staticWebAppName')]",
      "location": "Central US",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "repositoryUrl": "",
        "branch": "main",
        "buildProperties": {
          "appLocation": "/Client",
          "apiLocation": "",
          "outputLocation": "wwwroot"
        },
        "allowConfigFileUpdates": true,
        "stagingEnvironmentPolicy": "Enabled"
      },
      "tags": {
        "environment": "production"
      }
    },
    {
      "type": "Microsoft.Web/staticSites/linkedBackends",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', variables('staticWebAppName'), 'azure-functions-backend')]",
      "properties": {
        "backendResourceId": "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "region": "[parameters('location')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.Web/staticSites', variables('staticWebAppName'))]"
      ]
    }
  ],
  "outputs": {
    "appInsightsName": {
      "type": "string",
      "value": "[format('{0}-ai', variables('functionAppName'))]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[variables('staticWebAppName')]"
    },
    "staticWebAppUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName')), '2023-01-01').defaultHostname]"
    }
  }
}