# Deploy Azure Infrastructure with Bicep
# This workflow runs the Bicep deployment on request (workflow_dispatch)

name: Deploy Azure Infra (Bicep)

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Generate random suffix
        id: random
        run: |
          $RANDOM_SUFFIX = -join ((48..57) + (97..122) | Get-Random -Count 8 | % {[char]$_})
          $BASE_NAME = "copilotblazor$RANDOM_SUFFIX"
          echo "base_name=$BASE_NAME" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        shell: pwsh

      - name: Ensure Resource Group exists
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az group create --name ${{ steps.random.outputs.base_name }} --location westeurope

      - name: Deploy Bicep
        id: bicep-deploy
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ steps.random.outputs.base_name }}
          template: Infra/main.bicep
          parameters: >
            baseName=${{ steps.random.outputs.base_name }}
          failOnStdErr: false

      - name: Get Static Web Apps deployment token
        id: swa-token
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            SWA_NAME="${{ steps.bicep-deploy.outputs.staticWebAppName }}"
            SWA_TOKEN=$(az staticwebapp secrets list --name "$SWA_NAME" --resource-group "${{ steps.random.outputs.base_name }}" --query "properties.apiKey" --output tsv)
            echo "::add-mask::$SWA_TOKEN"
            echo "token=$SWA_TOKEN" >> $GITHUB_OUTPUT

      - name: Output resource names
        run: |
          echo "Resource Group: ${{ steps.random.outputs.base_name }}"
          echo "Function App Name: ${{ steps.bicep-deploy.outputs.functionAppName }}"
          echo "Storage Account Name: ${{ steps.bicep-deploy.outputs.storageAccountName }}"
          echo "Key Vault Name: ${{ steps.bicep-deploy.outputs.keyVaultName }}"
          echo "Static Web App Name: ${{ steps.bicep-deploy.outputs.staticWebAppName }}"
          echo "Static Web App URL: https://${{ steps.bicep-deploy.outputs.staticWebAppUrl }}"
          echo ""
          echo "ðŸš€ Next steps:"
          echo "1. Set the AZURE_STATIC_WEB_APPS_API_TOKEN secret in your repository:"
          echo "   - Go to Settings > Secrets and variables > Actions"
          echo "   - Add secret: AZURE_STATIC_WEB_APPS_API_TOKEN"
          echo "   - Value: ${{ steps.swa-token.outputs.token }}"
          echo "2. Update AZURE_BASE_NAME secret to: ${{ steps.random.outputs.base_name }}"
          echo "3. Deploy your Blazor app using the 'Deploy Blazor to Azure Static Web Apps' workflow"