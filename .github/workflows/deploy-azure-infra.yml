# Deploy Azure Infrastructure with Bicep
# Simplified deployment for West Europe region

name: Deploy Azure Infra (Bicep)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'prod'
        type: choice
        options:
        - dev
        - test
        - prod
  push:
    branches: [ master, main ]
    paths:
      - 'Infra/**'
      - '.github/workflows/deploy-azure-infra.yml'

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    env:
      # Simplified naming convention
      WORKLOAD_NAME: cpltst
      ENVIRONMENT: ${{ github.event.inputs.environment || 'prod' }}
      LOCATION: westeurope  # Fixed to West Europe
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set naming variables
        id: naming
        run: |
          # Simplified naming convention: rg-{workload}-{environment}
          RG_NAME="rg-${{ env.WORKLOAD_NAME }}-${{ env.ENVIRONMENT }}"
          
          echo "resource_group_name=${RG_NAME}" >> $GITHUB_OUTPUT
          echo "workload_name=${{ env.WORKLOAD_NAME }}" >> $GITHUB_OUTPUT
            echo "ðŸ“‹ Simplified Naming Convention Applied:"
          echo "Resource Group: ${RG_NAME}"
          echo "Workload: ${{ env.WORKLOAD_NAME }}"
          echo "Environment: ${{ env.ENVIRONMENT }}"
          echo "Location: ${{ env.LOCATION }} (Fixed)"

      - name: Ensure Resource Group exists
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az group create \
              --name ${{ steps.naming.outputs.resource_group_name }} \
              --location ${{ env.LOCATION }} \
              --tags \
                Environment=${{ env.ENVIRONMENT }} \
                Workload=${{ env.WORKLOAD_NAME }} \
                ManagedBy="GitHub Actions" \
                Repository="${{ github.repository }}" \
                LastDeployed="$(date -u +%Y-%m-%dT%H:%M:%SZ)"

      - name: Deploy Bicep
        id: bicep-deploy
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ steps.naming.outputs.resource_group_name }}
          template: Infra/main.bicep
          parameters: >
            workloadName=${{ steps.naming.outputs.workload_name }}
            environment=${{ env.ENVIRONMENT }}
          failOnStdErr: false

      - name: Output resource names and next steps
        run: |
          echo "ðŸŽ¯ Simplified Azure Deployment Complete!"
          echo "====================================="
          echo "Resource Group: ${{ steps.naming.outputs.resource_group_name }}"
          echo "Environment: ${{ env.ENVIRONMENT }}"
          echo "Location: ${{ env.LOCATION }}"
          echo ""
          echo "ðŸ“¦ Deployed Resources:"
          echo "Function App: ${{ steps.bicep-deploy.outputs.functionAppName }}"
          echo "Storage Account: ${{ steps.bicep-deploy.outputs.storageAccountName }}"
          echo "Key Vault: ${{ steps.bicep-deploy.outputs.keyVaultName }}"
          echo "Static Web App: ${{ steps.bicep-deploy.outputs.staticWebAppName }}"
          echo "Static Web App URL: https://${{ steps.bicep-deploy.outputs.staticWebAppUrl }}"
          echo ""
          echo "ðŸš€ Next Steps:"
          echo "1. Deploy your Blazor app using the 'Deploy Blazor to Azure Static Web Apps' workflow"
          echo "2. The workflow will automatically retrieve the deployment token from Azure"
          echo ""
          echo "ðŸ’¡ Simplified resource naming for easier management"