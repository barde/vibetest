# Deploy Azure Infrastructure with Bicep
# This workflow deploys the required Azure resources for the application

name: Deploy Azure Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'prod'
        type: choice
        options:
        - dev
        - test
        - prod
  push:
    branches: [ master, main ]
    paths:
      - 'Infra/**'
      - '.github/workflows/deploy-infra.yml'
      - '.github/workflows/deploy-infra.yml'

permissions:
  id-token: write
  contents: read

env:
  WORKLOAD_NAME: cpltst
  ENVIRONMENT: ${{ github.event.inputs.environment || 'prod' }}
  LOCATION: westeurope

jobs:
  deploy-infrastructure:
    name: Deploy Azure Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group
        run: |
          RG_NAME="rg-${{ env.WORKLOAD_NAME }}-${{ env.ENVIRONMENT }}"
          
          az group create \
            --name "$RG_NAME" \
            --location ${{ env.LOCATION }} \
            --tags \
              Environment=${{ env.ENVIRONMENT }} \
              Workload=${{ env.WORKLOAD_NAME }} \
              ManagedBy="GitHub Actions" \
              Repository="${{ github.repository }}" \
              LastDeployed="$(date -u +%Y-%m-%dT%H:%M:%SZ)"

      - name: Deploy Bicep Template
        id: deploy
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: rg-${{ env.WORKLOAD_NAME }}-${{ env.ENVIRONMENT }}
          template: Infra/main.bicep
          parameters: >
            workloadName=${{ env.WORKLOAD_NAME }}
            environment=${{ env.ENVIRONMENT }}
          failOnStdErr: false

      - name: Output deployment summary
        run: |
          echo "ðŸŽ¯ Azure Deployment Complete!"
          echo "========================="
          echo "Resource Group: rg-${{ env.WORKLOAD_NAME }}-${{ env.ENVIRONMENT }}"
          echo "Environment: ${{ env.ENVIRONMENT }}"
          echo "Location: ${{ env.LOCATION }}"
          echo ""
          echo "ðŸ“¦ Deployed Resources:"
          echo "Function App: ${{ steps.deploy.outputs.functionAppName }}"
          echo "Storage Account: ${{ steps.deploy.outputs.storageAccountName }}"
          echo "Key Vault: ${{ steps.deploy.outputs.keyVaultName }}"
          echo "Static Web App: ${{ steps.deploy.outputs.staticWebAppName }}"
          echo "Static Web App URL: https://${{ steps.deploy.outputs.staticWebAppUrl }}"