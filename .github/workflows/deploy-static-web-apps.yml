name: Deploy Blazor to Azure Static Web Apps

on:
  push:
    branches: [ master, main ]
    paths:
      - 'Client/**'
      - '.github/workflows/deploy-static-web-apps.yml'
      - 'Client.Tests/**'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'Client/**'
      - '.github/workflows/deploy-static-web-apps.yml'
      - 'Client.Tests/**'

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  WORKLOAD_NAME: cpltst
  ENVIRONMENT: prod

jobs:
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - run: dotnet restore CopilotBlazor.sln
      - run: dotnet build Client/Client.csproj --configuration Release --no-restore
      - run: dotnet test Client.Tests/Client.Tests.csproj --verbosity normal

  build-and-deploy:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get SWA deployment token
        id: token
        run: |
          SWA_NAME="swa-${{ env.WORKLOAD_NAME }}-${{ env.ENVIRONMENT }}"
          RG_NAME="rg-${{ env.WORKLOAD_NAME }}-${{ env.ENVIRONMENT }}"
          
          TOKEN=$(az staticwebapp secrets list --name "$SWA_NAME" --resource-group "$RG_NAME" --query "properties.apiKey" -o tsv)
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "::error::Static Web App '$SWA_NAME' not found. Deploy infrastructure first."
            exit 1
          fi
          echo "::add-mask::$TOKEN"
          echo "value=$TOKEN" >> $GITHUB_OUTPUT

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.token.outputs.value }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: '/Client'
          output_location: 'wwwroot'

  close-pull-request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get SWA deployment token
        id: token
        run: |
          SWA_NAME="swa-${{ env.WORKLOAD_NAME }}-${{ env.ENVIRONMENT }}"
          RG_NAME="rg-${{ env.WORKLOAD_NAME }}-${{ env.ENVIRONMENT }}"
          
          TOKEN=$(az staticwebapp secrets list --name "$SWA_NAME" --resource-group "$RG_NAME" --query "properties.apiKey" -o tsv)
          echo "::add-mask::$TOKEN"
          echo "value=$TOKEN" >> $GITHUB_OUTPUT

      - name: Close Pull Request
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.token.outputs.value }}
          action: 'close'
          app_location: '/Client'
