# Build and Deploy Blazor WebAssembly to Azure Static Web Apps
# This workflow builds and deploys the Blazor client to Azure Static Web Apps
# with automatic API integration to the Azure Functions backend

name: Deploy Blazor to Azure Static Web Apps

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
    types: [opened, synchronize, reopened, closed]

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  build_and_deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Validate required secrets
        run: |
          if [ -z "${{ secrets.AZURE_BASE_NAME }}" ]; then
            echo "::error::AZURE_BASE_NAME secret is required but not set."
            echo "::error::Please run the infrastructure deployment first and set this secret."
            exit 1
          fi

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get Static Web Apps deployment token
        id: swa-token
        run: |
          RESOURCE_GROUP="${{ secrets.AZURE_BASE_NAME }}"
          # Get the Static Web App name from the resource group (there should be only one)
          SWA_NAME=$(az staticwebapp list --resource-group "$RESOURCE_GROUP" --query "[0].name" --output tsv)
          if [ -z "$SWA_NAME" ] || [ "$SWA_NAME" = "null" ]; then
            echo "::error::No Static Web App found in resource group $RESOURCE_GROUP"
            echo "::error::Please ensure the infrastructure has been deployed first"
            exit 1
          fi
          echo "Found Static Web App: $SWA_NAME"
          SWA_TOKEN=$(az staticwebapp secrets list --name "$SWA_NAME" --resource-group "$RESOURCE_GROUP" --query "properties.apiKey" --output tsv)
          echo "::add-mask::$SWA_TOKEN"
          echo "token=$SWA_TOKEN" >> $GITHUB_OUTPUT

      - name: Restore dependencies
        run: dotnet restore Client/Client.csproj

      - name: Build Blazor WebAssembly
        run: dotnet publish Client/Client.csproj --configuration Release --output ./dist

      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.swa-token.outputs.token }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for GitHub integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations ######
          app_location: "/Client" # App source code path
          api_location: "" # Api source code path - optional (linked to Azure Functions)
          output_location: "wwwroot" # Built app content directory
          ###### End of Repository/Build Configurations ######
          app_build_command: 'dotnet publish --configuration Release --output ../dist'
          skip_api_build: true # We use linked Azure Functions for API

  close_pull_request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get Static Web Apps deployment token
        id: swa-token
        run: |
          RESOURCE_GROUP="${{ secrets.AZURE_BASE_NAME }}"
          # Get the Static Web App name from the resource group (there should be only one)
          SWA_NAME=$(az staticwebapp list --resource-group "$RESOURCE_GROUP" --query "[0].name" --output tsv)
          if [ -z "$SWA_NAME" ] || [ "$SWA_NAME" = "null" ]; then
            echo "::error::No Static Web App found in resource group $RESOURCE_GROUP"
            echo "::error::Please ensure the infrastructure has been deployed first"
            exit 1
          fi
          echo "Found Static Web App: $SWA_NAME"
          SWA_TOKEN=$(az staticwebapp secrets list --name "$SWA_NAME" --resource-group "$RESOURCE_GROUP" --query "properties.apiKey" --output tsv)
          echo "::add-mask::$SWA_TOKEN"
          echo "token=$SWA_TOKEN" >> $GITHUB_OUTPUT

      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.swa-token.outputs.token }}
          action: "close"
          app_location: "/Client"
