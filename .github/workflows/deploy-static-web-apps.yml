# Deploy Blazor WebAssembly to Azure Static Web Apps
# This workflow deploys only the frontend application
# Infrastructure deployment should be handled separately

name: Deploy Blazor to Azure Static Web Apps

on:
  push:
    branches: [ master, main ]
    paths:
      - 'Client/**'
      - '.github/workflows/deploy-static-web-apps.yml'
      - 'Client.Tests/**'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'Client/**'
      - '.github/workflows/deploy-static-web-apps.yml'
      - 'Client.Tests/**'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Test Blazor App (PR)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore CopilotBlazor.sln

      - name: Build Client
        run: dotnet build Client/Client.csproj --configuration Release --no-restore

      - name: Test Client
        run: dotnet test Client.Tests/Client.Tests.csproj --verbosity normal

  build-and-deploy:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    name: Build and Deploy Blazor App
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Set naming variables
        run: |
          # Using simplified naming convention: swa-cpltst-prod
          WORKLOAD_NAME="cpltst"
          ENVIRONMENT="prod"
          SWA_NAME="swa-$WORKLOAD_NAME-$ENVIRONMENT"
          RESOURCE_GROUP="rg-$WORKLOAD_NAME-$ENVIRONMENT"
          
          echo "SWA_NAME=$SWA_NAME" >> $GITHUB_ENV
          echo "RESOURCE_GROUP_NAME=$RESOURCE_GROUP" >> $GITHUB_ENV
          
          echo "ðŸ“‹ Using simplified naming convention:"
          echo "Static Web App: $SWA_NAME"
          echo "Resource Group: $RESOURCE_GROUP"

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get Static Web Apps deployment token
        id: swa-token
        run: |
          RESOURCE_GROUP="${{ env.RESOURCE_GROUP_NAME }}"
          # Get the deployment token for the Static Web App
          SWA_TOKEN=$(az staticwebapp secrets list --name "${{ env.SWA_NAME }}" --resource-group "$RESOURCE_GROUP" --query "properties.apiKey" --output tsv)
          if [ -z "$SWA_TOKEN" ] || [ "$SWA_TOKEN" = "null" ]; then
            echo "::error::No Static Web App found: ${{ env.SWA_NAME }} in resource group $RESOURCE_GROUP"
            echo "::error::Please ensure the infrastructure has been deployed first"
            exit 1
          fi
          echo "::add-mask::$SWA_TOKEN"
          echo "token=$SWA_TOKEN" >> $GITHUB_OUTPUT

      - name: Build and Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.swa-token.outputs.token }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: '/Client'
          output_location: 'wwwroot'

  close-pull-request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request
    steps:
      - name: Set naming variables
        run: |
          # Using simplified naming convention: swa-cpltst-prod
          WORKLOAD_NAME="cpltst"
          ENVIRONMENT="prod"
          SWA_NAME="swa-$WORKLOAD_NAME-$ENVIRONMENT"
          RESOURCE_GROUP="rg-$WORKLOAD_NAME-$ENVIRONMENT"
          
          echo "SWA_NAME=$SWA_NAME" >> $GITHUB_ENV
          echo "RESOURCE_GROUP_NAME=$RESOURCE_GROUP" >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get Static Web Apps deployment token
        id: swa-token
        run: |
          RESOURCE_GROUP="${{ env.RESOURCE_GROUP_NAME }}"
          # Get the deployment token for the Static Web App
          SWA_TOKEN=$(az staticwebapp secrets list --name "${{ env.SWA_NAME }}" --resource-group "$RESOURCE_GROUP" --query "properties.apiKey" --output tsv)
          if [ -z "$SWA_TOKEN" ] || [ "$SWA_TOKEN" = "null" ]; then
            echo "::error::No Static Web App found: ${{ env.SWA_NAME }} in resource group $RESOURCE_GROUP"
            echo "::error::Please ensure the infrastructure has been deployed first"
            exit 1
          fi
          echo "::add-mask::$SWA_TOKEN"
          echo "token=$SWA_TOKEN" >> $GITHUB_OUTPUT

      - name: Close Pull Request
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.swa-token.outputs.token }}
          action: 'close'
